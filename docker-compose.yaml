version: "3.8"

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./backups:/app/backups
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    depends_on:
      safebase_db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@safebase_db:5432/${DB_NAME}
      - POSTGRES_URL=postgresql://${DB_USER}:${DB_PASSWORD}@postgres_db:5432/${DB_NAME}
      - MYSQL_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql_db:3306/${MYSQL_DATABASE}
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=development
    networks:
      - app-network

  safebase_db:
    image: postgres:16
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - safebase_db_data:/var/lib/postgresql/data
      - ./sql/safebase.sql:/docker-entrypoint-initdb.d/safebase.sql
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - app-network

  postgres_db:
    image: postgres:16
    environment:
      - POSTGRES_USER=${DB_USER_POSTGRES}
      - POSTGRES_PASSWORD=${DB_PASSWORD_POSTGRES}
      - POSTGRES_DB=${DB_NAME_POSTGRES}
    ports:
      - "${DB_PORT_POSTGRES}:5432"
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
      - ./sql/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - ./sql/create_databases.sh:/docker-entrypoint-initdb.d/create_databases.sh
    networks:
      - app-network

  mysql_db:
    image: mysql:8
    command: --bind-address=0.0.0.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - "${DB_PORT_MYSQL}:3306"
    volumes:
      - mysql_db_data:/var/lib/mysql
      - ./sql/bibliotheque_en_ligne.sql:/docker-entrypoint-initdb.d/bibliotheque_en_ligne.sql
    networks:
      - app-network

volumes:
  safebase_db_data:
  postgres_db_data:
  mysql_db_data:


networks:
  app-network:
